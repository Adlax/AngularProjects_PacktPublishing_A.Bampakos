{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nfunction CardListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"header\", 3);\n    i0.ɵɵelementStart(2, \"p\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"div\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"footer\", 7);\n    i0.ɵɵelementStart(8, \"a\", 8);\n    i0.ɵɵtext(9, \"View on Wikipedia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", card_r1.link, i0.ɵɵsanitizeUrl);\n  }\n}\n\nclass UiControlsService {\n  constructor() {}\n\n}\n\nUiControlsService.ɵfac = function UiControlsService_Factory(t) {\n  return new (t || UiControlsService)();\n};\n\nUiControlsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UiControlsService,\n  factory: UiControlsService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UiControlsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass UiControlsComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nUiControlsComponent.ɵfac = function UiControlsComponent_Factory(t) {\n  return new (t || UiControlsComponent)();\n};\n\nUiControlsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: UiControlsComponent,\n  selectors: [[\"lib-ui-controls\"]],\n  decls: 2,\n  vars: 0,\n  template: function UiControlsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" ui-controls works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UiControlsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-ui-controls',\n      template: `\n    <p>\n      ui-controls works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CardListComponent {\n  constructor() {\n    this.cards = [];\n    this.cardChange = new EventEmitter();\n  }\n\n  ngOnInit() {}\n\n  sortCards(event) {\n    moveItemInArray(this.cards, event.previousIndex, event.currentIndex);\n    this.cardChange.emit(this.cards);\n  }\n\n}\n\nCardListComponent.ɵfac = function CardListComponent_Factory(t) {\n  return new (t || CardListComponent)();\n};\n\nCardListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardListComponent,\n  selectors: [[\"lib-card-list\"]],\n  inputs: {\n    cards: \"cards\"\n  },\n  outputs: {\n    cardChange: \"cardChange\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[\"cdkDropListOrientation\", \"horizontal\", \"cdkDropList\", \"\", 3, \"cdkDropListDropped\"], [\"cdkDrag\", \"\", \"class\", \"card m-4\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"card\", \"m-4\"], [1, \"card-header\"], [1, \"card-header-title\"], [1, \"card-content\"], [1, \"content\"], [1, \"card-footer\"], [1, \"card-footer-item\", 3, \"href\"]],\n  template: function CardListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"cdkDropListDropped\", function CardListComponent_Template_div_cdkDropListDropped_0_listener($event) {\n        return ctx.sortCards($event);\n      });\n      i0.ɵɵtemplate(1, CardListComponent_div_1_Template, 10, 3, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n    }\n  },\n  directives: [i1.CdkDropList, i2.NgForOf, i1.CdkDrag],\n  styles: [\"[_nghost-%COMP%] > div[_ngcontent-%COMP%]{display:grid;grid-auto-flow:column;overflow:auto}.card[_ngcontent-%COMP%]{width:200px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-card-list',\n      templateUrl: './card-list.component.html',\n      styleUrls: ['./card-list.component.css']\n    }]\n  }], function () {\n    return [];\n  }, {\n    cards: [{\n      type: Input\n    }],\n    cardChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CopyButtonComponent {\n  constructor() {\n    this.data = '';\n    this.copied = new EventEmitter();\n  }\n\n  ngOnInit() {}\n\n  onCopy() {\n    this.copied.next();\n  }\n\n}\n\nCopyButtonComponent.ɵfac = function CopyButtonComponent_Factory(t) {\n  return new (t || CopyButtonComponent)();\n};\n\nCopyButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CopyButtonComponent,\n  selectors: [[\"lib-copy-button\"]],\n  inputs: {\n    data: \"data\"\n  },\n  outputs: {\n    copied: \"copied\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"button\", \"is-light\", \"is-primary\", 3, \"cdkCopyToClipboard\", \"cdkCopyToClipboardCopied\"]],\n  template: function CopyButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"cdkCopyToClipboardCopied\", function CopyButtonComponent_Template_button_cdkCopyToClipboardCopied_0_listener() {\n        return ctx.onCopy();\n      });\n      i0.ɵɵtext(1, \"Copy\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"cdkCopyToClipboard\", ctx.data);\n    }\n  },\n  directives: [i1$1.CdkCopyToClipboard],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CopyButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-copy-button',\n      templateUrl: './copy-button.component.html',\n      styleUrls: ['./copy-button.component.css']\n    }]\n  }], function () {\n    return [];\n  }, {\n    data: [{\n      type: Input\n    }],\n    copied: [{\n      type: Output\n    }]\n  });\n})();\n\nclass UiControlsModule {}\n\nUiControlsModule.ɵfac = function UiControlsModule_Factory(t) {\n  return new (t || UiControlsModule)();\n};\n\nUiControlsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: UiControlsModule\n});\nUiControlsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, DragDropModule, ClipboardModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UiControlsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [UiControlsComponent, CardListComponent, CopyButtonComponent],\n      imports: [CommonModule, DragDropModule, ClipboardModule],\n      exports: [UiControlsComponent, CardListComponent, CopyButtonComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ui-controls\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CardListComponent, CopyButtonComponent, UiControlsComponent, UiControlsModule, UiControlsService };","map":{"version":3,"sources":["/media/rigel/LDLC_SSD/AngularProjects/9_customUIComponentsLibrary/my-components/dist/ui-controls/fesm2015/ui-controls-lib.js"],"names":["i0","Injectable","Component","EventEmitter","Input","Output","NgModule","i1","moveItemInArray","DragDropModule","i2","CommonModule","i1$1","ClipboardModule","UiControlsService","constructor","ɵfac","ɵprov","type","args","providedIn","UiControlsComponent","ngOnInit","ɵcmp","selector","template","styles","CardListComponent","cards","cardChange","sortCards","event","previousIndex","currentIndex","emit","CdkDropList","NgForOf","CdkDrag","templateUrl","styleUrls","CopyButtonComponent","data","copied","onCopy","next","CdkCopyToClipboard","UiControlsModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nclass UiControlsService {\n    constructor() { }\n}\nUiControlsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nUiControlsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass UiControlsComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nUiControlsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nUiControlsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: UiControlsComponent, selector: \"lib-ui-controls\", ngImport: i0, template: `\n    <p>\n      ui-controls works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-ui-controls',\n                    template: `\n    <p>\n      ui-controls works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass CardListComponent {\n    constructor() {\n        this.cards = [];\n        this.cardChange = new EventEmitter();\n    }\n    ngOnInit() {\n    }\n    sortCards(event) {\n        moveItemInArray(this.cards, event.previousIndex, event.currentIndex);\n        this.cardChange.emit(this.cards);\n    }\n}\nCardListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: CardListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: CardListComponent, selector: \"lib-card-list\", inputs: { cards: \"cards\" }, outputs: { cardChange: \"cardChange\" }, ngImport: i0, template: \"<div cdkDropListOrientation=\\\"horizontal\\\" cdkDropList (cdkDropListDropped)=\\\"sortCards($event)\\\">\\n  <div cdkDrag class=\\\"card m-4\\\" *ngFor=\\\"let card of cards\\\" >\\n    <header class=\\\"card-header\\\"><p class=\\\"card-header-title\\\">{{card.title}}</p></header>\\n    <div class=\\\"card-content\\\"><div class=\\\"content\\\">{{card.description}}</div></div>\\n    <footer class=\\\"card-footer\\\"><a href=\\\"{{card.link}}\\\" class=\\\"card-footer-item\\\">View on Wikipedia</a></footer>\\n  </div>\\n</div>\\n\", styles: [\":host>div{display:grid;grid-auto-flow:column;overflow:auto}.card{width:200px}\\n\"], directives: [{ type: i1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: CardListComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-card-list',\n                    templateUrl: './card-list.component.html',\n                    styleUrls: ['./card-list.component.css']\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { cards: [{\n                type: Input\n            }], cardChange: [{\n                type: Output\n            }] } });\n\nclass CopyButtonComponent {\n    constructor() {\n        this.data = '';\n        this.copied = new EventEmitter();\n    }\n    ngOnInit() {\n    }\n    onCopy() {\n        this.copied.next();\n    }\n}\nCopyButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: CopyButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCopyButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.14\", type: CopyButtonComponent, selector: \"lib-copy-button\", inputs: { data: \"data\" }, outputs: { copied: \"copied\" }, ngImport: i0, template: \"<button class=\\\"button is-light is-primary\\\" [cdkCopyToClipboard]=\\\"data\\\" (cdkCopyToClipboardCopied)=\\\"onCopy()\\\">Copy</button>\\n\", styles: [\"\"], directives: [{ type: i1$1.CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: [\"cdkCopyToClipboard\", \"cdkCopyToClipboardAttempts\"], outputs: [\"cdkCopyToClipboardCopied\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: CopyButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-copy-button',\n                    templateUrl: './copy-button.component.html',\n                    styleUrls: ['./copy-button.component.css']\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { data: [{\n                type: Input\n            }], copied: [{\n                type: Output\n            }] } });\n\nclass UiControlsModule {\n}\nUiControlsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUiControlsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsModule, declarations: [UiControlsComponent,\n        CardListComponent,\n        CopyButtonComponent], imports: [CommonModule,\n        DragDropModule,\n        ClipboardModule], exports: [UiControlsComponent,\n        CardListComponent,\n        CopyButtonComponent] });\nUiControlsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsModule, imports: [[\n            CommonModule,\n            DragDropModule,\n            ClipboardModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.14\", ngImport: i0, type: UiControlsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        UiControlsComponent,\n                        CardListComponent,\n                        CopyButtonComponent\n                    ],\n                    imports: [\n                        CommonModule,\n                        DragDropModule,\n                        ClipboardModule\n                    ],\n                    exports: [\n                        UiControlsComponent,\n                        CardListComponent,\n                        CopyButtonComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ui-controls\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CardListComponent, CopyButtonComponent, UiControlsComponent, UiControlsModule, UiControlsService };\n"]},"metadata":{},"sourceType":"module"}