{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/clipboard';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n\nfunction CardListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"header\", 3);\n    i0.ɵɵelementStart(2, \"p\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelementStart(5, \"div\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"footer\", 7);\n    i0.ɵɵelementStart(8, \"a\", 8);\n    i0.ɵɵtext(9, \"View on Wikipedia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", card_r1.link, i0.ɵɵsanitizeUrl);\n  }\n}\n\nlet UiControlsService = /*#__PURE__*/(() => {\n  class UiControlsService {\n    constructor() {}\n\n  }\n\n  UiControlsService.ɵfac = function UiControlsService_Factory(t) {\n    return new (t || UiControlsService)();\n  };\n\n  UiControlsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UiControlsService,\n    factory: UiControlsService.ɵfac,\n    providedIn: 'root'\n  });\n  return UiControlsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet UiControlsComponent = /*#__PURE__*/(() => {\n  class UiControlsComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  UiControlsComponent.ɵfac = function UiControlsComponent_Factory(t) {\n    return new (t || UiControlsComponent)();\n  };\n\n  UiControlsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: UiControlsComponent,\n    selectors: [[\"lib-ui-controls\"]],\n    decls: 2,\n    vars: 0,\n    template: function UiControlsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" ui-controls works! \");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return UiControlsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CardListComponent = /*#__PURE__*/(() => {\n  class CardListComponent {\n    constructor() {\n      this.cards = [];\n      this.cardChange = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    sortCards(event) {\n      moveItemInArray(this.cards, event.previousIndex, event.currentIndex);\n      this.cardChange.emit(this.cards);\n    }\n\n  }\n\n  CardListComponent.ɵfac = function CardListComponent_Factory(t) {\n    return new (t || CardListComponent)();\n  };\n\n  CardListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CardListComponent,\n    selectors: [[\"lib-card-list\"]],\n    inputs: {\n      cards: \"cards\"\n    },\n    outputs: {\n      cardChange: \"cardChange\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"cdkDropListOrientation\", \"horizontal\", \"cdkDropList\", \"\", 3, \"cdkDropListDropped\"], [\"cdkDrag\", \"\", \"class\", \"card m-4\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"card\", \"m-4\"], [1, \"card-header\"], [1, \"card-header-title\"], [1, \"card-content\"], [1, \"content\"], [1, \"card-footer\"], [1, \"card-footer-item\", 3, \"href\"]],\n    template: function CardListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function CardListComponent_Template_div_cdkDropListDropped_0_listener($event) {\n          return ctx.sortCards($event);\n        });\n        i0.ɵɵtemplate(1, CardListComponent_div_1_Template, 10, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      }\n    },\n    directives: [i1.CdkDropList, i2.NgForOf, i1.CdkDrag],\n    styles: [\"[_nghost-%COMP%] > div[_ngcontent-%COMP%]{display:grid;grid-auto-flow:column;overflow:auto}.card[_ngcontent-%COMP%]{width:200px}\"]\n  });\n  return CardListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CopyButtonComponent = /*#__PURE__*/(() => {\n  class CopyButtonComponent {\n    constructor() {\n      this.data = '';\n      this.copied = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onCopy() {\n      this.copied.next();\n    }\n\n  }\n\n  CopyButtonComponent.ɵfac = function CopyButtonComponent_Factory(t) {\n    return new (t || CopyButtonComponent)();\n  };\n\n  CopyButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CopyButtonComponent,\n    selectors: [[\"lib-copy-button\"]],\n    inputs: {\n      data: \"data\"\n    },\n    outputs: {\n      copied: \"copied\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"button\", \"is-light\", \"is-primary\", 3, \"cdkCopyToClipboard\", \"cdkCopyToClipboardCopied\"]],\n    template: function CopyButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"cdkCopyToClipboardCopied\", function CopyButtonComponent_Template_button_cdkCopyToClipboardCopied_0_listener() {\n          return ctx.onCopy();\n        });\n        i0.ɵɵtext(1, \"Copy\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"cdkCopyToClipboard\", ctx.data);\n      }\n    },\n    directives: [i1$1.CdkCopyToClipboard],\n    styles: [\"\"]\n  });\n  return CopyButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet UiControlsModule = /*#__PURE__*/(() => {\n  class UiControlsModule {}\n\n  UiControlsModule.ɵfac = function UiControlsModule_Factory(t) {\n    return new (t || UiControlsModule)();\n  };\n\n  UiControlsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: UiControlsModule\n  });\n  UiControlsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, DragDropModule, ClipboardModule]]\n  });\n  return UiControlsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * Public API Surface of ui-controls\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CardListComponent, CopyButtonComponent, UiControlsComponent, UiControlsModule, UiControlsService }; //# sourceMappingURL=ui-controls-lib.js.map","map":null,"metadata":{},"sourceType":"module"}